using System;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.Windows.Forms;

namespace WindowsFormsAppPhotoLab
{
    public partial class Form1 : Form
    {
        private SqlConnection connection;
        private DataTable originalData;

        public Form1()
        {
            InitializeComponent();
            InitializeDatabaseConnection();
        }

        private void InitializeDatabaseConnection()
        {
            // Инициализация подключения к базе данных
            string connectionString = "Data Source=.\\SQLEXPRESS;Initial Catalog=Knowledge;Integrated Security=True";
            connection = new SqlConnection(connectionString);
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            // Загрузка данных из представления
            this.v_2964_1_PhotoLaboratoryTableAdapter.Fill(this.dataSetPhotoLab.V_2964_1_PhotoLaboratory);
            originalData = dataSetPhotoLab.V_2964_1_PhotoLaboratory.Copy();

            // Настройка DataGridView для регистрации
            SetupDataGridViewRegistration();

            // Загрузка отделов в ComboBox
            LoadDepartments();

            // Подписываемся на события
            dtgViewRegistration.CellValueChanged += dtgViewRegistration_CellValueChanged;
            dtgViewRegistration.CellBeginEdit += dtgViewRegistration_CellBeginEdit;
            dtgViewRegistration.DataBindingComplete += dtgViewRegistration_DataBindingComplete;

            // Настройка вкладки "Журнал"
            SetupDataGridViewJournal();
        }

        private void SetupDataGridViewRegistration()
        {
            // Настройка DataGridView для регистрации
            dtgViewRegistration.AutoGenerateColumns = false;
            dtgViewRegistration.DataSource = dataSetPhotoLab.V_2964_1_PhotoLaboratory;

            // Добавляем колонку с чекбоксом
            if (!dtgViewRegistration.Columns.Contains("isCheckedDataGridViewCheckBoxColumn"))
            {
                var chkColumn = new DataGridViewCheckBoxColumn
                {
                    DataPropertyName = "IsChecked",
                    Name = "isCheckedDataGridViewCheckBoxColumn",
                    HeaderText = "Выбор"
                };
                dtgViewRegistration.Columns.Add(chkColumn);
            }

            // Остальные колонки
            dtgViewRegistration.Columns.Add(new DataGridViewTextBoxColumn
            {
                DataPropertyName = "TabNumber",
                HeaderText = "Табельный номер"
            });

            dtgViewRegistration.Columns.Add(new DataGridViewTextBoxColumn
            {
                DataPropertyName = "ShortName",
                HeaderText = "ФИО"
            });

            dtgViewRegistration.Columns.Add(new DataGridViewTextBoxColumn
            {
                DataPropertyName = "Department",
                HeaderText = "Отдел"
            });
        }

        private void SetupDataGridViewJournal()
        {
            // Настройка DataGridView для журнала
            dtgViewJournal.AutoGenerateColumns = false;

            // Колонка с кнопкой
            var btnColumn = new DataGridViewButtonColumn
            {
                Name = "CopyButton",
                Text = "Копировать",
                UseColumnTextForButtonValue = true
            };
            dtgViewJournal.Columns.Add(btnColumn);

            // Остальные колонки
            dtgViewJournal.Columns.Add(new DataGridViewTextBoxColumn
            {
                DataPropertyName = "FileName",
                HeaderText = "Файл"
            });

            dtgViewJournal.Columns.Add(new DataGridViewTextBoxColumn
            {
                DataPropertyName = "Time",
                HeaderText = "Дата регистрации"
            });

            // Загружаем данные для журнала
            LoadJournalData();
        }

        private void LoadDepartments()
        {
            try
            {
                // Получаем уникальные отделы из исходных данных
                var uniqueDepartments = originalData.AsEnumerable()
                    .Select(row => row.Field<string>("Department"))
                    .Distinct()
                    .OrderBy(dept => dept)
                    .ToList();

                cmbDep.Items.Add("Все");
                cmbDep.Items.AddRange(uniqueDepartments.ToArray());
                cmbDep.SelectedIndex = 0;
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Ошибка при загрузке отделов: {ex.Message}");
            }
        }

        private void dtgViewRegistration_CellValueChanged(object sender, DataGridViewCellEventArgs e)
        {
            if (e.ColumnIndex == dtgViewRegistration.Columns["isCheckedDataGridViewCheckBoxColumn"].Index && e.RowIndex >= 0)
            {
                var row = dtgViewRegistration.Rows[e.RowIndex];
                if (row.Cells["isCheckedDataGridViewCheckBoxColumn"].Value == null)
                    return;

                bool isChecked = (bool)row.Cells["isCheckedDataGridViewCheckBoxColumn"].Value;

                if (isChecked)
                {
                    int tabNumber = Convert.ToInt32(row.Cells["TabNumber"].Value);
                    int studioNumber = Convert.ToInt32(cmbStudios.SelectedValue); // Предположим, что есть ComboBox для студий
                    string fileName = row.Cells["ShortName"].Value.ToString() + " " + row.Cells["Pass"].Value.ToString();
                    DateTime dateTime = DateTime.Now;

                    InsertIntoEmployeeRegistrations(tabNumber, studioNumber, fileName, dateTime, isChecked);

                    // Окрашиваем строку
                    row.DefaultCellStyle.BackColor = Color.LightGreen;
                }
            }
        }

        private void dtgViewRegistration_CellBeginEdit(object sender, DataGridViewCellCancelEventArgs e)
        {
            // Блокируем снятие галочки
            if (e.ColumnIndex == dtgViewRegistration.Columns["isCheckedDataGridViewCheckBoxColumn"].Index && e.RowIndex >= 0)
            {
                var row = dtgViewRegistration.Rows[e.RowIndex];
                if (row.Cells["isCheckedDataGridViewCheckBoxColumn"].Value != null && (bool)row.Cells["isCheckedDataGridViewCheckBoxColumn"].Value)
                {
                    e.Cancel = true;
                }
            }
        }

        private void dtgViewRegistration_DataBindingComplete(object sender, DataGridViewBindingCompleteEventArgs e)
        {
            // Окрашиваем все отмеченные строки
            foreach (DataGridViewRow row in dtgViewRegistration.Rows)
            {
                if (row.Cells["isCheckedDataGridViewCheckBoxColumn"].Value != null && (bool)row.Cells["isCheckedDataGridViewCheckBoxColumn"].Value)
                {
                    row.DefaultCellStyle.BackColor = Color.LightGreen;
                }
            }
        }

        private void InsertIntoEmployeeRegistrations(int tabNumber, int studioNumber, string fileName, DateTime dateTime, bool isChecked)
        {
            try
            {
                string query = @"
                    INSERT INTO t_2964_1_PhotoLab 
                    ([TabNumber], [NumberStudio], [FileName], [Time], [IsChecked]) 
                    VALUES (@tabNumber, @studioNumber, @fileName, @dateTime, @isChecked)";

                using (var cmd = new SqlCommand(query, connection))
                {
                    cmd.Parameters.AddWithValue("@tabNumber", tabNumber);
                    cmd.Parameters.AddWithValue("@studioNumber", studioNumber);
                    cmd.Parameters.AddWithValue("@fileName", fileName);
                    cmd.Parameters.AddWithValue("@dateTime", dateTime);
                    cmd.Parameters.AddWithValue("@isChecked", isChecked);

                    connection.Open();
                    cmd.ExecuteNonQuery();
                    connection.Close();
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Ошибка при записи данных: {ex.Message}");
            }
        }

        private void ApplyFilters(object sender, EventArgs e)
        {
            try
            {
                string selectedDepartment = cmbDep.SelectedItem?.ToString() == "Все" ? null : cmbDep.SelectedItem?.ToString();
                string tabNumberFilter = string.IsNullOrEmpty(txtTabNumber.Text) ? null : txtTabNumber.Text;
                string fioFilter = string.IsNullOrEmpty(txtFIO.Text) ? null : txtFIO.Text;
                bool? showOnlyChecked = chkIsChecked.Checked ? true : (bool?)null;

                // Фильтрация для вкладки "Регистрация"
                if (tabControl.SelectedTab == tabPageRegistration)
                {
                    this.v_2964_1_PhotoLaboratoryTableAdapter.FillByFilters(
                        this.dataSetPhotoLab.V_2964_1_PhotoLaboratory,
                        selectedDepartment,
                        tabNumberFilter,
                        fioFilter,
                        showOnlyChecked
                    );
                }
                // Фильтрация для вкладки "Журнал"
                else if (tabControl.SelectedTab == tabPageJournal)
                {
                    LoadJournalData(selectedDepartment, tabNumberFilter, fioFilter);
                }

                // Обновляем окрашивание
                dtgViewRegistration.Refresh();
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Ошибка при фильтрации: {ex.Message}");
            }
        }

        private void LoadJournalData(string selectedDepartment = null, string tabNumberFilter = null, string fioFilter = null)
        {
            try
            {
                // Загружаем данные из таблицы регистрации
                string query = @"
                    SELECT FileName, Time 
                    FROM t_2964_1_PhotoLab 
                    WHERE IsChecked = 1";

                // Добавляем фильтры
                if (!string.IsNullOrEmpty(selectedDepartment))
                    query += " AND Department = @department";
                if (!string.IsNullOrEmpty(tabNumberFilter))
                    query += " AND TabNumber LIKE @tabNumber";
                if (!string.IsNullOrEmpty(fioFilter))
                    query += " AND FileName LIKE @fio";

                query += " ORDER BY Time DESC";

                using (var adapter = new SqlDataAdapter(query, connection))
                {
                    adapter.SelectCommand.Parameters.AddWithValue("@department", selectedDepartment ?? DBNull.Value);
                    adapter.SelectCommand.Parameters.AddWithValue("@tabNumber", $"%{tabNumberFilter}%" ?? DBNull.Value);
                    adapter.SelectCommand.Parameters.AddWithValue("@fio", $"%{fioFilter}%" ?? DBNull.Value);

                    var journalData = new DataTable();
                    adapter.Fill(journalData);
                    dtgViewJournal.DataSource = journalData;
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Ошибка при загрузке журнала: {ex.Message}");
            }
        }

        private void dtgViewJournal_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {
            // Копирование FileName в буфер
            if (e.ColumnIndex == dtgViewJournal.Columns["CopyButton"].Index && e.RowIndex >= 0)
            {
                var fileName = dtgViewJournal.Rows[e.RowIndex].Cells["FileName"].Value?.ToString();
                if (!string.IsNullOrEmpty(fileName))
                {
                    Clipboard.SetText(fileName);
                    MessageBox.Show($"Скопировано: {fileName}");
                }
            }
        }
    }
}
